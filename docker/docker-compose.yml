# Simplified Docker Compose for Tic-Tac-Toe Game
# Essential services only for easy setup

services:
  # Redis for inter-server synchronization
  redis:
    image: redis:7-alpine
    container_name: tic-tac-toe-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - tic-tac-toe-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Game Server A
  server-a:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: tic-tac-toe-server-a
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - SERVER_ID=server-a
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
      - DEBUG=tic-tac-toe:*
    depends_on:
      - redis
    networks:
      - tic-tac-toe-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Game Server B
  server-b:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: tic-tac-toe-server-b
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - SERVER_ID=server-b
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
      - DEBUG=tic-tac-toe:*
    depends_on:
      - redis
    networks:
      - tic-tac-toe-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  tic-tac-toe-network:
    driver: bridge

volumes:
  redis_data:
